import{r as m,b as a,a as d,c as b}from"./sn_border.2879f07a.js";import{d as p,g as f,e as g,h,m as y,f as s,p as P,j as x,c as O,l as D,b as c}from"./mapbox-utils.esm.1d7eedb7.js";function E(o,t){var n=[];return p(o,function(e){var r=!1;if(e.geometry.type==="Point")f(t,function(i){g(e,i)&&(r=!0)}),r&&n.push(e);else if(e.geometry.type==="MultiPoint"){var u=[];f(t,function(i){h(e,function(l){g(l,i)&&(r=!0,u.push(l))})}),r&&n.push(y(u))}else throw new Error("Input geometry must be a Point or MultiPoint")}),s(n)}const J={linear:!1,maxZoom:24,offset:[0,0],padding:{top:0,right:0,bottom:0,left:0}},v=o=>{const t=Object.create(null);return Object.keys(o).forEach(n=>{JSON.stringify(o[n])!==JSON.stringify(J[n])&&(t[n]=o[n])}),Object.keys(t).length>0?t:!0},S=o=>s(o.map(t=>{const{coordinates:n,...e}=t;return P(n,{...t})})),A=o=>s(o.map(t=>{const{coordinates:n,...e}=t;return O(n,{...e})})),G=o=>s(o.map(t=>{const{coordinates:n,...e}=t;return D(n,{...e})})),M=(o=100)=>{const t=m(o,{bbox:c(a)});return E(t,a)},I=(o=1e3)=>{const t=[];return t.push(...x(M(o))),t.map((n,e)=>{const r=Math.floor(Math.random()*4+1);return{coordinates:n,id:e+1,type:r+""}})},L=(o=20)=>{const t=c(a);return d(o,{bbox:t,max_radial_length:.1}).features.map((e,r)=>({coordinates:e.geometry.coordinates,name:"\u533A\u57DF"+(r+1)}))},w=(o=50)=>{const t=c(a);return b(o,{bbox:t,max_length:.1,num_vertices:5,max_rotation:Math.PI/20}).features.map((e,r)=>({coordinates:e.geometry.coordinates,id:r+1}))};export{S as a,v as b,w as c,G as d,L as e,J as f,I as g,A as h};
